#include <iostream>

using namespace std;

/*
1309번 문제

접근 방식
->
1 2 5 12 29 ...n줄에 넣을수 있는 갯수 -> n번째는 (n - 1)번째 수 * 2 + (n - 2)번째 수
한줄의 경우의 수가 이러므로 n번째 수면 1부터 n번째수 까지 더해서 * 2를 한뒤 +1 을 해준다.
*/

/*
조건
시간제한 2초
메모리 제한 128MB
우리의 크기 N N은 1이상 10^5이하
경우의 수를 9901로 나눈 나머지를 출력하여라
*/

/*
태그
. 다이나믹 프로그래밍
*/

int arr[100007];

int main()
{
    arr[1] = 1;
    for (int i = 2; i < 100001; i++)
    {
        arr[i] = (2 * arr[i - 1] + arr[i - 2]) % 9901;
    }

    int input;
    int ans = 0;
    scanf("%d", &input);
    for (int i = 1; i < input + 1; i++)
    {
        ans += arr[i];
        if (ans >= 9901)
        {
            ans %= 9901;
        }
    }
    ans *= 2;
    ans++;
    ans %= 9901;
    printf("%d", ans);
}

/*
문제 후기
점화식을 찾는데 상당히 고생을 하였었다.
n번째 줄의 0번칸은 1번째줄의 0번칸, 1번칸... n-1의 1번칸 까지의 합
n번째 줄의 1번칸은 1번째줄의 0번칸, 1번칸... n-1의 0번칸 까지의 합

이것을 보고 1차원 배열 형태에서 값을 계산하여보니 점화식이 나왔었다.
*/
